# Example cars config with pyramid feature extractor
# For each experiment, copy this config and modify the copy
#1.model
model_config {
    model_name: 'ammf_model'
    checkpoint_name: 'pyramid_cars_example'

    input_config {
        bev_depth: 6
        img_depth: 3

        img_dims_w: 1200
        img_dims_h: 360
    }

    p1_config {
        p1_proposal_roi_crop_size: 3
        p1_fusion_method: 'AF'
        p1_train_nms_size: 1024
        p1_test_nms_size: 2 #300
        p1_nms_iou_thresh: 0.8
        p1_use_sparse_pooling: True #Enable Sparse Pooling right before p1
        p1_sparse_pooling_use_batch_norm: True #Use Batch Norm after the Sparse Pooling right before p1
        p1_sparse_pooling_conv_after_fusion: True #Add another convolution after the Sparse Pooling right before p1
        p1_sparse_pooling_after_vgg: False #Enable Sparse Pooling right after VGG16 and before FPN (no batch norm, no conv)
        p1_dual_sparse_pooling_after_vgg: True #Fuse both LIDAR to camera and camera to LIDAR
    }

    p2_config {
        p2_proposal_roi_crop_size: 7
        p2_positive_selection: 'not_bkg'
        p2_nms_size: 200
        p2_nms_iou_thresh: 0.02
        p2_box_representation: 'box_4ca'
    }

    p3_config {
        p3_proposal_roi_crop_size: 7
        p3_positive_selection: 'not_bkg'
        p3_nms_size: 100
        p3_nms_iou_thresh: 0.01
        p3_box_representation: 'box_4ca'
    }

    label_smoothing_epsilon: 0.001
    expand_proposals_xz: 0.0
    # To disable path drop, set both to 1.0
    path_drop_probabilities: [1, 1]
    train_on_all_samples: False
    eval_all_samples: False

    layers_config {
        bev_feature_extractor {
            # deeper and thinner  
            bev_vgg_pyr {
                vgg_conv1: [2, 32]
                vgg_conv2: [3, 64]
                vgg_conv3: [5, 128]
                vgg_conv4: [5, 128]
                l2_weight_decay: 0.0005
            }
        }
        img_feature_extractor {
            img_vgg_pyr {
                vgg_conv1: [2, 32]
                vgg_conv2: [2, 64]
                vgg_conv3: [3, 256]
                vgg_conv4: [3, 512]
                l2_weight_decay: 0.0005
            }
        }
     

        p1_config {
            cls_fc6: 256
            cls_fc7: 256
            reg_fc6: 256
            reg_fc7: 256
            l2_weight_decay: 0.0005
            keep_prob: 0.5



        }
        ammf_config {

            fusion_fc_layers {
                num_layers: 3
                layer_sizes: [2048, 2048, 2048]
                l2_weight_decay: 0.005
                keep_prob: 0.5
                fusion_method: 'CF'   # 'AF', 'CF'
                fusion_type: 'early'  # 'early', 'late', 'deep'

            }
        }
    }

    # Loss function weights
    loss_config {
        cls_loss_weight: 1.0
        reg_loss_weight: 5.0
        ang_loss_weight: 1.0
        #seg_loss_weight: 2.0

    }
}
#2.train
train_config {

    batch_size: 1

    optimizer {
        adam_optimizer {
            learning_rate {
                exponential_decay_learning_rate {
                    initial_learning_rate: 0.0001
                    decay_steps: 30000
                    decay_factor: 0.8
                }
            }
        }
    }

    overwrite_checkpoints: False

    max_checkpoints_to_keep: 10000
    max_iterations: 120000
    checkpoint_interval: 10000

    summary_interval: 1000
    summary_histograms: True
    summary_img_images: True
    summary_bev_images: True

    allow_gpu_mem_growth: True
}

#3. eval
eval_config {
    eval_interval: 10000
    eval_mode: 'val'
    ckpt_indices: -1
    evaluate_repeatedly: False

    allow_gpu_mem_growth: True
}

#4. dataset
dataset_config {
    name: 'kitti'

    dataset_dir: '~/Kitti/object'
    #data_split: 'test'

    data_split_dir: 'training'
    has_labels: True

    cluster_split: 'train'
    classes: ['Car']
    num_clusters: [2]

    bev_source: 'lidar'
    aug_list: ['flipping', 'pca_jitter']

    kitti_utils_config {
        area_extents: [-40, 40, -5, 3, 0, 70]
        voxel_size: 0.1
        anchor_strides: [0.5, 0.5]
        density_threshold: 1

        bev_generator {
            slices {
                height_lo: -0.2
                height_hi: 2.3
                num_slices: 5
            }
        }

        mini_batch_config {
            density_threshold: 1

            p1_config {
                iou_2d_thresholds {
                   neg_iou_lo: 0.0
                   neg_iou_hi: 0.3
                   pos_iou_lo: 0.5
                   pos_iou_hi: 1.0
                }
                # iou_3d_thresholds {
                #     neg_iou_lo: 0.0
                #     neg_iou_hi: 0.3
                #     pos_iou_lo: 0.4
                #     pos_iou_hi: 1.0
                # }

                mini_batch_size: 512
            }

            ammf_config {
                iou_2d_thresholds {
                    neg_iou_lo: 0.0
                    neg_iou_hi: 0.55
                    pos_iou_lo: 0.65
                    pos_iou_hi: 1.0
                }

                mini_batch_size: 1024
            }
        }
    }
}
